@function colorstrap-text-color($color, $exceptions) {

	@if (index($exceptions, $color) != null ) {
		@return lighten($color, 80%)
	}
	@if (lightness( $color ) > 49) {
		@return colorstrap-darken-color($color, 0.20)
	}
	@else {
		@return lighten($color, 80%)
	}
}

@function colorstrap-darken-color($color, $amount) {

	$red : red($color);
	$green : green($color);
	$blue : blue($color);

	@return rgb($red * $amount, $green * $amount, $blue * $amount);
}

@function colorstrap-text-color2($color, $exceptions) {

	@if (index($exceptions, $color) != null ) {
		@return lighten($color, 90%)
	}
	@if (lightness( $color ) > 49) {
		@return colorstrap-darken-color($color, 0.10)
	}
	@else {
		@return lighten($color, 90%)
	}
}
@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}
@function luma($color){ 
  // Adapted from: https://gist.github.com/voxpelli/6304812
  $rgba: red($color), green($color), blue($color);
  $rgba2: ();
  @for $i from 1 through 3 {
    $rgb: nth($rgba, $i);
    $rgb: $rgb / 255;
    $rgb: if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2));
    $rgba2: append($rgba2, $rgb);
  }
  @return (.2126 * nth($rgba2, 1) + .7152 * nth($rgba2, 2) + 0.0722 * nth($rgba2, 3))*100;
}
@function contrast_ratio($color1, $color2) {
  $luma1: luma($color1) + 5;
  $luma2: luma($color2) + 5;
  $ratio: $luma1 / $luma2;
  @if $luma1 < $luma2 {
    $ratio: 1 / $ratio;
  } 
  @return $ratio;
}


@function text-contrast2($color) {
	$brightness: .241 * red($color) * red($color) + .691 * green($color) * green($color) + .068 * blue($color) * blue($color);
	@if($brightness > 16900) {
		@return darken($color, 70);
	}
	@else {
		@return lighten($color, 70);
	}
}
 
@function text-contrast3($color, $bgcolor: $color) {
  $threshold: 5.5; // 4.5 = WCAG AA,7= WCAG AAA
  $list: 20 30 40 50 60 70 80 90 100;
  @each $percent in $list {
    $lighter: lighten($bgcolor, $percent);
    $darker: darken($bgcolor, $percent);
    $darker-ratio: contrast_ratio($color, $darker);
    $lighter-ratio: contrast_ratio($color, $lighter);
    @if($lighter-ratio > $darker-ratio){
      @if ($lighter-ratio > $threshold){
        @return $lighter;
      }
    }
    @if($darker-ratio > $lighter-ratio){
      @if ($darker-ratio > $threshold){
        @return $darker;
      }
    }
  }
  @return if(lightness($color) < 51, #FFF, #000)
}


@function text-contrast($color) {
	$bgcolor: $color;
	$brightness: .241 * red($color) * red($color) + .691 * green($color) * green($color) + .068 * blue($color) * blue($color);
	$bratio1: $brightness / (255*255);
	@for $i from 1 through 255 {
		@if ( $bratio1 > 0.25 ) {
			$bgcolor: darken($bgcolor, 1);
		} @else {
			$bgcolor: lighten($bgcolor, 1);
		}
		$bgbrightness: .241 * red($bgcolor) * red($bgcolor) + .691 * green($bgcolor) * green($bgcolor) + .068 * blue($bgcolor) * blue($bgcolor);
		$bratio2: $bgbrightness / (255*255);
		$ratio: (max($bratio1, $bratio2) + 0.065) / (min($bratio1, $bratio2) + 0.065);
		$threshold: round($ratio*100)/100;
		
		@if ($threshold > 4.5) {
			@return $bgcolor;
		}
		$color: $bgcolor;
	}
	@return $color;
}
@function text-contrast-bw($color) {
	$brightness: .241 * red($color) * red($color) + .691 * green($color) * green($color) + .068 * blue($color) * blue($color);
	$bratio1: $brightness / (255*255);

	$retcolor: $color;

	@if ( $bratio1 > 0.35 ) {
		$retcolor: #000000;
	} @else {
		$retcolor: #ffffff;
	}
	@return $retcolor;
}

